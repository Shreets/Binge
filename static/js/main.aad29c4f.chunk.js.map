{"version":3,"sources":["display.module.css","search.module.css","bg.jpg","display.js","search.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Display","props","className","style","display_box","display_img","image","src","movies","medium","alt","display_info","title","final","text","name","span","language","genres","join","status","runtime","rating","average","href","officialSite","Search","content","top_text","selectMovie","map","movie","index","reccomendation","key","button_set","button","onClick","onclick","App","useState","setMovie","disagree","setDisagree","setText","setSelectMovie","getSeries","lastIndexOf","a","fetch","response","json","data","random","Math","floor","length","MovieSelection","useEffect","console","log","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.aad29c4f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"display_box\":\"display_display_box__1Nke9\",\"title\":\"display_title__3LcCn\",\"display_img\":\"display_display_img__3IFLC\",\"display_info\":\"display_display_info__26Jd9\",\"image\":\"display_image__34Wnp\",\"final\":\"display_final__1jRjf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"display_box\":\"search_display_box__YdhQ1\",\"button_set\":\"search_button_set___I_rm\",\"button\":\"search_button__27Hv5\",\"content\":\"search_content__1q6dl\",\"top_text\":\"search_top_text__3ZyxR\",\"reccomendation\":\"search_reccomendation__2eMd5\",\"movie\":\"search_movie__2ARzs\"};","module.exports = __webpack_public_path__ + \"static/media/bg.fb93d9a9.jpg\";","import React from \"react\";\r\nimport style from \"./display.module.css\";\r\n// import film from \"./film.jpg\";\r\n\r\nconst Display = (props) => {\r\n  return (\r\n    <div className={style.display_box}>\r\n      <div className={style.display_img}>\r\n        <img\r\n          className={style.image}\r\n          src={props.movies && props.movies.image && props.movies.image.medium}\r\n          alt=\"film poster\"\r\n        />\r\n      </div>\r\n\r\n      <div className={style.display_info}>\r\n        <p className={style.title}>\r\n          <p className={style.final}>{props.text}</p>\r\n          {props.movies.name}\r\n        </p>\r\n        <p>\r\n          <span className={style.span}>Language </span>: {props.movies.language}\r\n        </p>\r\n        <p>\r\n          <span className={style.span}>Genere </span>:{\" \"}\r\n          {props.movies &&\r\n            props.movies.genres &&\r\n            props.movies.genres.join(\", \")}\r\n        </p>\r\n        <p>\r\n          <span className={style.span}>Status </span>: {props.movies.status}\r\n        </p>\r\n        <p>\r\n          <span className={style.span}>Runtime </span>: {props.movies.runtime}\r\n        </p>\r\n        <p>\r\n          <span className={style.span}>Rating </span>:{\" \"}\r\n          {props.movies && props.movies.rating && props.movies.rating.average}\r\n        </p>\r\n        <p>\r\n          <span className={style.span}>Official Site </span>:{\" \"}\r\n          <a href={props.movies.officialSite}>{props.movies.officialSite}</a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n","import React from \"react\";\r\nimport style from \"./search.module.css\";\r\n\r\nconst Search = (props) => {\r\n  return (\r\n    <div className={style.display_box}>\r\n      <div className={style.content}>\r\n        <div className={style.top_text}>Tell Me what to watch</div>\r\n\r\n        {props.selectMovie.map((movie, index) => {\r\n          return (\r\n            <div className={style.reccomendation} key={index}>\r\n              Here is your option:\r\n              <span className={style.movie}>{movie.name}</span>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <div className={style.button_set}>\r\n        <button className={style.button} onClick={props.final}>\r\n          YES üëç\r\n        </button>\r\n        <button className={style.button} onClick={props.onclick}>\r\n          NO üëé\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Display from \"./display\";\nimport Search from \"./search\";\nimport background from \"./bg.jpg\";\n\nconst App = () => {\n  let declaration = \" \";\n  const [movie, setMovie] = useState({});\n  const [disagree, setDisagree] = useState(true);\n  const [text, setText] = useState(declaration);\n  const [selectMovie, setSelectMovie] = useState([]);\n\n  const finalselection = selectMovie.lastIndexOf();\n\n  const getSeries = async () => {\n    const response = await fetch(`https://api.tvmaze.com/shows`);\n    const data = await response.json();\n    const random = Math.floor(Math.random() * data.length);\n    setMovie(data[random]);\n    // console.log(data[random]);\n\n    const MovieSelection = [...selectMovie, data[random]];\n    // console.log(selectMovie, data[random]);\n    setSelectMovie(MovieSelection);\n  };\n\n  // console.log(selectMovie)\n\n  useEffect(() => {\n    if (!disagree) {\n      return;\n    }\n    getSeries();\n  }, [disagree]);\n\n  const unlike = () => {\n    if (!disagree) {\n      return;\n    }\n    setDisagree(movie);\n  };\n\n  const likeClick = () => {\n    if (!disagree) {\n      return;\n    }\n    setDisagree(false);\n    setText(\"Great! You Have decided to watch : \");\n  };\n  console.log(selectMovie);\n  return (\n    <div className=\"container\">\n      <Display movies={movie} text={text} />\n      <Search\n        movies={movie}\n        onclick={unlike}\n        final={likeClick}\n        selectMovie={selectMovie}\n        disagree={disagree}\n      />\n    </div>\n  );\n};\n\nexport default App;\n\n// no button disable\n//replies print\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}